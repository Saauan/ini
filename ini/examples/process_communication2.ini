process main() {
	@init() {
		//p("c1", "c2")[node="n1"]
		//p("c2", "c")[node="n2"]
		//println("coucou")[node="n1"]
		myFunction("yeah")
		myProcess1("yeah")[node="n1"]
		println("processes started")
	}
//	c:@consume[channel="c"](v) {
//		println("end of pipeline: "+v)
//		stop(c)
//	}
}

process p(in, out) {
	c:@consume[channel=in](v) {
		println(in+": "+v)
//		produce(out, v+1)
//		stop(c)
	}
}

process myProcess1(msg) {
	@init() {
		println(""+myFunction2(msg) + myFunction2(msg))
	}
}

function myFunction2(msg) {
	@init() {
		return "%"+msg+"%"
	}
}

function myFunction(msg) {
	@init() {
		println(msg)
	}
}

function square(n) {
	@init() {
		return n*n
	}
}