/**
 * This program finds all the solutions to the N-queen puzzle
 */
function main() {
	@init() {
		pos = []
		find_solutions(pos,8)
	}
	@end() {
		println("\nEnd.")
	}
}

function check_solution(pos) {
	@init() {
		print(".")
	}
	i,j of [0..size(pos)-1] | j>i &&  
		(pos[i]==pos[j] || (i + pos[i] == j + pos[j]) || (i - pos[i] == j - pos[j])) {
		return false
	}
	@end() {
		return true
	}
}

function find_solutions(pos,size) {
	@init() {
		line = size(pos)
		pos[line] = 0
	}
	ok = check_solution(pos) {
		find_solutions(copy(pos), size)
	}
	ok && size(pos) == size {
		println("\nFound solution:")
		print_pos(pos,size)
	}
	pos[line] == size-1 {
		return
	}
	pos[line] < size-1 {
		pos[line]++
	}
}

function print_pos(pos,size) {
	@init() {
		i = 0
	}
	i < size {
		print_line(pos,i,size)
		i++
	}
}

function print_line(pos,line,size) {
	@init() {
		i = 0
	}
	i<size && line<size(pos) && i==pos[line] {
		print("Q ")
		i++
	}
	i<size && (line >= size(pos) || i!=pos[line])  {
		print("- ")
		i++
	}
	@end() {
		println("")
	}
}

