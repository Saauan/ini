
/*
 * With INI, you can use Java by binding functions to field, constructors and
 * methods.
 */
input_stream()=>InputStream [class="java.System", member="in"]
open_fwriter()=>FileWriter [class="java.io.FileWriter", member="new(..)"]
append_fwriter(FileWriter,String)=>Void [class="java.io.FileWriter", member="write(..)"]
close_fwriter(FileWriter)=>Void [class="java.io.FileWriter", member="close(..)"]
writer_println(Writer,String)=>Void [class="java.io.Writer", member="println(..)"]

file()=>File [class="java.io.File", member="new(..)"]
file_exists(File)=>Boolean [class="java.io.File", member="exists(..)"]
file_is_directory(File)=>Boolean [class="java.io.File", member="isDirectory(..)"]
file_list(File)=>File* [class="java.io.File", member="list(..)"]
file_mkdirs(File)=>Boolean [class="java.io.File", member="mkdirs(..)"]

file_name(File)=>String [class="java.io.File", member="getName(..)"]

/*
 * A simple function to write a string in a file.
 */
function fprint(file_path,string,mode) {
	@init() {
		f = open_fwriter(file_path, mode)
		append_fwriter(f,string)
		close_fwriter(f)
	}
}