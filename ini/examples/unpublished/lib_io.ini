
/*
 * With INI, you can use Java by binding functions to field, constructors and
 * methods.
 */
input_stream()->InputStream => "java.System", "in"
open_fwriter()->FileWriter => "java.io.FileWriter", "new(..)"
append_fwriter(FileWriter,String)->Void => "java.io.FileWriter", "write(..)"
close_fwriter(FileWriter)->Void => "java.io.FileWriter", "close(..)"
writer_println(Writer,String)->Void => "java.io.Writer", "println(..)"

file()->File => "java.io.File", "new(..)"
file_exists(File)->Boolean => "java.io.File", "exists(..)"
file_is_directory(File)->Boolean => "java.io.File", "isDirectory(..)"
file_list(File)->File* => "java.io.File", "list(..)"
file_mkdirs(File)->Boolean => "java.io.File", "mkdirs(..)"

file_name(File)->String => "java.io.File", "getName(..)"

/*
 * A simple function to write a string in a file.
 */
function fprint(file_path,string, mode) {
	@init() {
		f = open_fwriter(file_path, mode)
		append_fwriter(f,string)
		close_fwriter(f)
	}
}