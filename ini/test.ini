
import "ini/lib/collect.ini"

function main() {
	println("fac(3)="+fac(3))
}

process fac(n) {
	@init() {
		result = null
		produce("#fac/request/{n}", n)
		[1..n].foreach(i => {
			p(i++) [node="n{i}"]
		})
	}
	c: @consume(r) [channel="#fac/result/{n}"] {
		result = r
		[1..n].foreach(i => produce("#fac/admin/{i}", "kill"))
		stop(c)
	}
	@end() {
		return result
	}
}

process p(n) {
	@init() {
		println("p({n}) started")
	}
	c1: @consume(n) [channel = "fac/request/{n}"] {
		case {
			n == 1 {
				produce("fac/result/1", 1)
			}
			n > 1 {
				produce("fac/request/{n-1}", n-1)
			}
		}
	}
	c2: @consume(f) [channel="fac/result/{n-1}"] {
		produce("fac/result/{n}", f * n)
	}
	c3: @consume(msg) [channel="fac/admin/{n}"] && msg == "kill" {
		stop(c1)
		stop(c2)
		stop(c3)
	} 
	@end() {
		//println("killed p({n})")
	}
}
