
import "ini/lib/collect.ini"

function main() {
	fac(5)
}

process fac(n) {
	@init() {
		//i = 1
		//println("coucou fac "+i+","+n)
		produce("fac_request_"+n, n)
		[1..n].foreach(i => {
			p(i) //[node="n"+i]
		})
		println("processes launched")
	}
	c: @consume(f) [channel="fac_result_"+n] {
		println("final fac_result: "+n)
		result = f
		println("hourra: "+f)
		[1..n].foreach(i => {
			produce("fac_kill_"+i, "kill")
		})
		stop(c)
	}
}

process p(n) {
	@init() {
		println("started p("+n+")")
	}
	request: @consume(n) [channel = "fac_request_"+n] {
		println("fac_request: "+n)
		case {
			n == 1 {
				println("n==1")
				produce("fac_result_"+1, 1)
			}
			n > 1 {
				println("n>1")
				produce("fac_request_"+(n-1), n-1)
			}
		}
	}
	result: @consume(f) [channel="fac_result_"+(n-1)] {
		println("fac_result: "+(n-1)+" -> "+f)
		produce("fac_result_"+n, f * n)
	}
	kill: @consume(msg) [channel = "fac_kill_"+n] && msg == "kill" {
		stop(request)
		stop(result)
		stop(kill)
	}
	@end() {
		println("done p("+n+")")
	}
}
